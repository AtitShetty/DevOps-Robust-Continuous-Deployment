---

- name: Install java 8
  include_role:
    name: java8_setup
    private: yes

- name: Install mysql-server
  include_role:
    name: mysql_setup
    private: yes

- name: Add ansible repository
  apt_repository:
    repo: 'ppa:ansible/ansible'
    state: present
    update_cache: yes

- name: Installing other required packages
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - maven
    - gcc
    - git
    - git-core
    - python-software-properties
    - ansible

- name: Checking if itrust build job already exists
  shell: "java -jar /home/jenkins-cli.jar -s http://localhost:8080 list-jobs --username {{username}} --password {{jenkinspassword}}"
  register: jobs_list
  changed_when: "jobs_list.stdout.find('itrust-packaging-job') == -1"

- name: Sending template for iTrust to Jenkins server
  template:
    src: itrust.xml.j2
    dest: /tmp/itrust.xml
    owner: jenkins
    group: jenkins

- name: Creating new build job for itrust
  shell: java -jar /home/jenkins-cli.jar -auth "{{username}}":"{{jenkinspassword}}" -s http://localhost:8080 create-job itrust-packaging-job < /tmp/itrust.xml
  when: "jobs_list.stdout.find('itrust-packaging-job') == -1"

- name: Update build job for itrust
  shell: java -jar /home/jenkins-cli.jar -auth "{{username}}":"{{jenkinspassword}}" -s http://localhost:8080 update-job itrust-packaging-job < /tmp/itrust.xml
  when: "jobs_list.stdout.find('itrust-packaging-job') != -1"

- name: stat /etc/playbooksRepo
  stat:
    path: /etc/playbooksRepo
  register: playbooksRepoStat

- name: Ensure that directory exists for cloning
  file:
    path: /etc/playbooksRepo
    state: directory
  when: playbooksRepoStat.stat.exists == False

- name: stat "{{ post_build_playbook_path }}"
  stat:
    path: "{{ post_build_playbook_path }}"
  register: postBuildDirStat

- name: Clone playbook to run jenkins post build scripts
  command: git clone https://{{github_username}}:{{github_password}}@github.ncsu.edu/akshetty/devops-milestone3.git
  args:
    chdir: /etc/playbooksRepo
  when: postBuildDirStat.stat.exists == False

- name: Pull latest playbooksRepo
  command: git pull
  args:
    chdir: "{{ post_build_playbook_path }}"
  when: postBuildDirStat.stat.exists == True

- name: Transfer remote server certificates
  copy:
    src: deployment_env.pem
    dest: "{{ post_build_playbook_path }}"
    mode: 0600
...
